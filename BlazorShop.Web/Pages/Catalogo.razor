@page "/"
@inject IProdutoService produtoService



@if (Produtos == null)
{
    <div class="spinner">
        <ExibirSpinner></ExibirSpinner>

    </div>
}
else
{
    <Carousel/>
   
     <div class="text-center container py-5" style="background-color:white;width:100%">



            <div class="row" id="secaoproduto" style="width:100%">
    <h3 class="mb-5">Produtos</h3>
    @if (Produtos.Count() > 0)
    {
        var produtosPorCategoria = from produto in Produtos
                                   group produto by produto.CategoriaId into prodPorCatGrupo
                                   orderby prodPorCatGrupo.Key
                                   select prodPorCatGrupo;

        @foreach (var prodGrupo in produtosPorCategoria)
        {
            <section id=@prodGrupo.FirstOrDefault(pg=> pg.CategoriaId == prodGrupo.Key).CategoriaNome>
                    <h4 >
                        @prodGrupo.FirstOrDefault(pg=> pg.CategoriaId == prodGrupo.Key).CategoriaNome</h4>
            <div class="row mt-3">
                <ExibirProdutos Produtos="@prodGrupo"></ExibirProdutos>
            </div>
            <hr class="mb-2"/>
       </section>
        }        
    }
    </div>
</div>
}

@code {
   

    public IEnumerable<ProdutoDto>? Produtos { get; set; }

    [Inject]
    public IGerenciaProdutosLocalStorageService?
                 GerenciaProdutosLocalStorageService { get; set; }

    [Inject]
    public IGerenciaCarrinhoItensLocalStorageService?
                 GerenciaCarrinhoItensLocalStorageService { get; set; }

    [Inject]
    public ICarrinhoCompraService? CarrinhoCompraService { get; set; }

    public string? MensagemErro { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LimpaLocalStorage();

            Produtos = await GerenciaProdutosLocalStorageService.GetCollection();

            var carrinhoCompraItens = await GerenciaCarrinhoItensLocalStorageService
                                           .GetCollection();

            var totalQuantidade = carrinhoCompraItens.Sum(i => i.Quantidade);

            CarrinhoCompraService.RaiseEventOnCarrinhoCompraChanged(totalQuantidade);

        }
        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
    }

    private async Task LimpaLocalStorage()
    {
        await GerenciaProdutosLocalStorageService.RemoveCollection();
        await GerenciaCarrinhoItensLocalStorageService.RemoveCollection();
    }
}
